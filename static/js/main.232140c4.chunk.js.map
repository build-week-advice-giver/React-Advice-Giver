{"version":3,"sources":["components/Login.js","components/PrivateRoute.js","components/AnswerPage.js","components/AskPage.js","components/SignUp.js","components/Landing.js","App.js","serviceWorker.js","components/reducers.js","components/actions.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeHostName","bind","assertThisInitialized","onChangePort","onSubmit","state","username","password","e","setState","target","value","_this2","preventDefault","_this$state","token","localStorage","getItem","id","console","log","axios","post","headers","Authorization","Userid","then","res","setItem","data","history","push","react_default","a","createElement","style","marginTop","type","onChange","className","onClick","Component","withRouter","PrivateRoute","component","rest","objectWithoutProperties","react_router","assign","render","to","Answerpage","gimme","messages","get","response","catch","error","map","item","index","key","message","placeholder","AskPage","isAnswered","private_","title","user_id","private","name","onChangeAdv","SignUp","onChangeExp","onChangeYears","onChangeAge","onChangeEmail","adviceGiver","expertise","yearsOfExperience","age","email","parseInt","Landing","react_router_dom","React","App","exact","path","Landing_Landing","components_Login","components_SignUp","AnswerPage","Boolean","window","location","hostname","match","initialState","reducer","arguments","length","undefined","action","objectSpread","isLoggingIn","fetchingData","friends","payload","errorStatusCode","status","store","createStore","applyMiddleware","thunk","logger","ReactDOM","react_redux_es","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.232140c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeHostName = this.onChangeHostName.bind(this);\r\n        this.onChangePort = this.onChangePort.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n        username: '',\r\n        password: '',\r\n        }\r\n    }\r\n    onChangeHostName(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n    onChangePort(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n    \r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const { username, password, } = this.state;\r\n        const token = localStorage.getItem('token');\r\n        const id = localStorage.getItem('id');\r\n        console.log(this.state)\r\n\r\n        axios.post('https://advice-giver.herokuapp.com/auth/login',\r\n         { \r\n            username, \r\n            password, \r\n            headers: {Authorization: token, Userid: id } })\r\n            \r\n            .then(res => {\r\n                localStorage.setItem(\"token\", res.data.token);\r\n                localStorage.setItem(\"id\", res.data.id);   \r\n                this.props.history.push(\"/answer\")       \r\n                }\r\n            )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 50}}>\r\n                <h3>Login</h3>\r\n                <form>\r\n                    <div>\r\n                        <label>Userusername:</label>\r\n                        <input type=\"text\" onChange={this.onChangeHostName}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>Password: </label>\r\n                        <input type=\"text\" onChange={this.onChangePort}/>\r\n                    </div>\r\n                   \r\n                    <div className=\"form-group\">\r\n                        <input onClick={this.onSubmit} type=\"submit\" value=\"Login\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport default function(props) {\r\n\tconst {\r\n\t\tcomponent: Component, ...rest} = props\r\n\r\n\t// the rest variable === { exact: true, path: \"/\" }\r\n\t// it excludes \"component\" because we use it manually\r\n\treturn (\r\n\t\t<Route {...rest} render={() => {\r\n\t\t\t// get a value saved in our browser's local storage\r\n\t\t\tconst token = localStorage.getItem('token')\r\n\r\n\t\t\treturn token\r\n\t\t\t\t? <Component />\r\n\t\t\t\t: <Redirect to=\"/login\" />\r\n\t\t}} />\r\n\t)\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class Answerpage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.gimme = this.gimme.bind(this);\r\n\r\n        this.state = {messages: []};\r\n    \r\n    }\r\n    componentDidMount() {\r\n\t\tthis.gimme()\r\n    }\r\n    \r\n    gimme() {\r\n       axios.get('https://advice-giver.herokuapp.com/messages', {\r\n            headers: { Authorization: localStorage.getItem('token') }})\r\n            .then(response => {\r\n                this.setState({ messages: response.data });\r\n              })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n    // answer(){\r\n    //     e.preventDefault();\r\n    //     const = {} =this.state;\r\n    //     axios.post('https://advice-giver.herokuapp.com/messages'), {\r\n\r\n    //     }\r\n    // } \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Questions!</h3>\r\n                <p>{this.state.messages.map((item, index) => (\r\n                    <p key={index}>{item.message}\r\n                    <input type='text' placeholder='Type your answer here!'></input>\r\n                    <button>Submit</button></p>\r\n                ))} </p>\r\n               \r\n\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class AskPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            isAnswered: false,\r\n            private_: false, \r\n            message: \"\", \r\n            type: \"\", \r\n            title: \"\", \r\n            user_id: '',\r\n        };\r\n    \r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const {  \r\n            isAnswered,\r\n            private_,\r\n            message,\r\n            type,\r\n            title,\r\n            user_id,\r\n        } = this.state;\r\n        \r\n        console.log(this.state)\r\n\r\n        axios.post('https://advice-giver.herokuapp.com/auth/messages', \r\n        {\r\n            isAnswered,\r\n            'private': private_,\r\n            message,\r\n            type,\r\n            title,\r\n            user_id,\r\n        } \r\n        )\r\n    }\r\n     \r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 50}}>\r\n              <h3>Ask a Question!</h3>\r\n              <form>\r\n                  <div>\r\n                      <label>Title:</label>\r\n                      <input type=\"text\" name='title' onChange={this.onChangeHostName}/>\r\n                  </div>\r\n                  <div>\r\n                      <label>Question: </label>\r\n                      <input type=\"text\" name='message' onChange={this.onChangePort}/>\r\n                  </div>\r\n\r\n                  <div>\r\n                      <label>Type: </label>\r\n                      <input type=\"text\" name='type' onChange={this.onChangeAdv}/>\r\n                  </div>\r\n\r\n                 \r\n                  <div className=\"form-group\">\r\n                      <input onClick={this.onSubmit} type=\"submit\" value=\"Submit\" />\r\n                  </div>\r\n              </form>\r\n          </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass SignUp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeHostName = this.onChangeHostName.bind(this);\r\n        this.onChangePort = this.onChangePort.bind(this);\r\n        this.onChangeAdv = this.onChangeAdv.bind(this);\r\n        this.onChangeExp = this.onChangeExp.bind(this);\r\n        this.onChangeYears = this.onChangeYears.bind(this);\r\n        this.onChangeAge = this.onChangeAge.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n        username: '',\r\n        password: '',\r\n        adviceGiver: false,\r\n        expertise: null,\r\n        yearsOfExperience: null,\r\n        age: null,\r\n        email: '',\r\n\r\n      }\r\n    }\r\n    \r\n  \r\nonChangeHostName(e) {\r\n      this.setState({\r\n          username: e.target.value\r\n      });\r\n  }\r\nonChangePort(e) {\r\n      this.setState({\r\n          password: e.target.value\r\n      });\r\n  }\r\n  \r\nonChangeAdv(e) {\r\n    this.setState({\r\n        adviceGiver: e.target.value\r\n    });\r\n}\r\n\r\nonChangeExp(e) {\r\n  this.setState({\r\n      expertise: null\r\n  });\r\n}\r\n\r\nonChangeYears(e) {\r\n  this.setState({\r\n      yearsOfExperience: parseInt(e.target.value)\r\n  });\r\n}\r\n\r\nonChangeAge(e) {\r\n  this.setState({\r\n      age: parseInt(e.target.value)\r\n  });\r\n}\r\nonChangeEmail(e) {\r\n  this.setState({\r\n      email: e.target.value\r\n  });\r\n}\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const { username, \r\n          password, \r\n          adviceGiver,\r\n          expertise,\r\n          yearsOfExperience,\r\n          age,\r\n          email, } = this.state;\r\n        \r\n        console.log(this.state)\r\n        axios.post('https://advice-giver.herokuapp.com/auth/register', \r\n          { \r\n            username, \r\n            password, \r\n            adviceGiver,\r\n            expertise,\r\n            yearsOfExperience,\r\n            age,\r\n            email,  \r\n          } )\r\n    .then(() => {this.props.history.push(\"/Login\")})\r\n    \r\n        }\r\n    render() {\r\n      return (\r\n          <div style={{marginTop: 50}}>\r\n              <h3>Sign Up</h3>\r\n              <form>\r\n                  <div>\r\n                      <label>Userusername:</label>\r\n                      <input type=\"text\" onChange={this.onChangeHostName}/>\r\n                  </div>\r\n                  <div>\r\n                      <label>Password: </label>\r\n                      <input type=\"text\" onChange={this.onChangePort}/>\r\n                  </div>\r\n\r\n                  <div>\r\n                      <label>Advice Giver?: </label>\r\n                      <input type=\"text\" onChange={this.onChangeAdv}/>\r\n                  </div>\r\n\r\n                  <div>\r\n                      <label>expertise: </label>\r\n                      <input type=\"text\" onChange={this.onChangeExp}/>\r\n                  </div>\r\n\r\n                  <div>\r\n                      <label>yearsOfExperience: </label>\r\n                      <input type=\"number\" onChange={this.onChangeYears}/>\r\n                  </div>\r\n\r\n                  <div>\r\n                      <label>age: </label>\r\n                      <input type=\"number\" onChange={this.onChangeAge}/>\r\n                  </div>\r\n\r\n                  <div>\r\n                      <label>Email: </label>\r\n                      <input type=\"text\" onChange={this.onChangeEmail}/>\r\n                  </div>\r\n                 \r\n                  <div className=\"form-group\">\r\n                      <input onClick={this.onSubmit} type=\"submit\" value=\"Login\" />\r\n                  </div>\r\n              </form>\r\n          </div>\r\n      )\r\n  }\r\n}\r\n  export default withRouter(SignUp);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default class Landing extends React.Component {\r\n\t// componentDidMount() {\r\n\t// \tthis.props.getAccount()\r\n\t// }\r\n\r\n\t// logout = (evt) => {\r\n\t// \tevt.preventDefault()\r\n\r\n\t// \tlocalStorage.removeItem('token')\r\n\t// \tthis.props.history.push('/login')\r\n\t// }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{/* <button type=\"button\" onClick={this.logout}>Logout</button> */}\r\n                <Link to='/login'>Login</Link>\r\n                <br></br>\r\n                <Link to='/signup'>Sign Up</Link>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import './App.css'\r\nimport React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Login from './components/Login'\r\nimport PrivateRoute from './components/PrivateRoute'\r\nimport AnswerPage from './components/AnswerPage'\r\nimport AskPage from './components/AskPage'\r\nimport SignUp from './components/SignUp'\r\nimport Landing from './components/Landing'\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Advice Giver</h1>\r\n        <Route exact path='/' render={props => (<Landing {...props} />)}/>\r\n        <Route path='/login' render={props => (<Login {...props} />)}/>\r\n        <Route path='/signup' render={props => (<SignUp {...props} />)}/>\r\n\r\n        <PrivateRoute exact path=\"/ask\" component={AskPage}/>\r\n        <PrivateRoute exact path=\"/answer\" component={AnswerPage}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n    LOGIN,\r\n    FETCH_ASK_START,\r\n    FETCH_ASK_SUCCESS,\r\n    FETCH_ASK_FAILURE,\r\n    NEW_USER,\r\n  } from './actions'\r\n\r\nconst initialState = {\r\n        id: 1,                     \r\n        username: \"\",      \r\n        password: \"\",\r\n        email: \"\",\r\n        adviceGiver: false,\r\n        expertise: null,\r\n        yearsOfExperience: 10,\r\n        age: 30\r\n    \r\n    }\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOGIN: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true\r\n            }\r\n        }\r\n        case FETCH_ASK_START: {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                fetchingData: true\r\n            }\r\n        }\r\n        case FETCH_ASK_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                fetchingData: false,\r\n                friends: action.payload\r\n            }\r\n        }\r\n        case FETCH_ASK_FAILURE: {\r\n            return {\r\n                ...state,\r\n                errorStatusCode: action.payload.status\r\n            }\r\n        }\r\n        case NEW_USER: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    //     case NEW_FRIEND:\r\n    //     return { ...state, newFriend: true };\r\n    //   case NEW_FRIEND_SUCCESS:\r\n    //     return {\r\n    //       ...state,\r\n    //       newFriend: false,\r\n    //       friends: [...state.friends, ...action.payload]\r\n          \r\n    //     }\r\n    //   case NEW_FRIEND_FAILURE:\r\n    //     return { ...state, newFriend: false, error: action.payload }\r\n\r\n    //     case DEL_FRIEND:\r\n    //             return { ...state, newFriend: true };\r\n    //           case DEL_FRIEND_SUCCESS:\r\n    //             return {\r\n    //               ...state,\r\n    //               newFriend: false,\r\n    //               friends: [...state.friends, ...action.payload]\r\n                  \r\n    //             }\r\n    //           case DEL_FRIEND_FAILURE:\r\n    //             return { ...state, newFriend: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import axios from \"axios\"\r\nexport const LOGIN = \"LOGIN\"\r\nexport const REGISTER = \"REGISTER\"\r\nexport const FETCH_ASK_START = \"FETCH_ASK_START\"\r\nexport const FETCH_ASK_SUCCESS = \"FETCH_ASK_SUCCESS\"\r\nexport const FETCH_ASK_FAILURE = \"FETCH_ASK_FAILURE\"\r\nexport const NEW_USER = \"NEW_USER\"\r\n\r\nexport const login = data => dispatch => {\r\n  dispatch({ \r\n      type: LOGIN\r\n     })\r\n  return axios\r\n    .post('https://advice-giver.herokuapp.com/auth/login', data)\r\n    .then(res => localStorage.setItem(\"token\", res.data.payload))\r\n}\r\n\r\nexport const getData = () => dispatch => {\r\n  dispatch({ \r\n      type: FETCH_ASK_START\r\n     })\r\n  axios\r\n    .get('https://advice-giver.herokuapp.com/messages', {\r\n      headers: { Authorization: localStorage.getItem('token') }\r\n    })\r\n    .then(res => {\r\n      dispatch({ \r\n          type: FETCH_ASK_SUCCESS, \r\n          payload: res.data })\r\n    })\r\n    .catch(err => {\r\n      if (err.response.status === 403) {\r\n        localStorage.removeItem('token')\r\n      }\r\n      dispatch({ \r\n          type: FETCH_ASK_FAILURE, \r\n          payload: err.response \r\n        })\r\n    })\r\n}\r\n\r\nexport const newUser = (data) => dispatch => {\r\n    dispatch({ \r\n        type: NEW_USER\r\n       })\r\n    axios\r\n      .post('https://advice-giver.herokuapp.com/auth/register', data)\r\n      .then(({data})=> dispatch({ \r\n            type: NEW_USER, \r\n            payload: data })\r\n      )\r\n\r\n      .catch(err => {\r\n        if (err.response.status === 403) {\r\n          localStorage.removeItem('token')\r\n        }\r\n        dispatch({ \r\n            type: NEW_USER, \r\n            payload: err.response \r\n          })\r\n      })\r\n  }\r\n\r\n// export const NEW_FRIEND = 'NEW_FRIEND'\r\n// export const NEW_FRIEND_SUCCESS = 'NEW_FRIEND_SUCCESS'\r\n// export const NEW_FRIEND_FAILURE = 'NEW_FRIEND_FAILURE'\r\n\r\n// export const addFriend = friend => dispatch => {\r\n\r\n//   dispatch({ type: NEW_FRIEND });\r\n//   axios\r\n//     .post('http://localhost:5000/api/friends', friend, {\r\n//       headers: { Authorization: localStorage.getItem('token') }\r\n//     })\r\n\r\n//     .then(({ data }) => dispatch(\r\n//       {\r\n//         type: NEW_FRIEND_SUCCESS,\r\n//         payload: data\r\n//       }\r\n      \r\n//     ))\r\n\r\n//     .catch(({ data }) => dispatch(\r\n//       {\r\n//         type: NEW_FRIEND_FAILURE,\r\n//         payload: data\r\n//       }\r\n//     ))\r\n// }\r\n\r\n// export const DEL_FRIEND = 'DEL_FRIEND'\r\n// export const DEL_FRIEND_SUCCESS = 'DEL_FRIEND_SUCCESS'\r\n// export const DEL_FRIEND_FAILURE = 'DEL_FRIEND_FAILURE'\r\n\r\n// export const delFriend = id => dispatch => {\r\n\r\n//   dispatch({ type: DEL_FRIEND });\r\n//   axios\r\n//     .delete('http://localhost:5000/api/friends/${id}', {\r\n//       headers: { Authorization: localStorage.getItem('token') }\r\n//     })\r\n\r\n//     .then(({ data }) => dispatch(\r\n//       {\r\n//         type: DEL_FRIEND_SUCCESS,\r\n//         payload: data\r\n//       }\r\n      \r\n//     ))\r\n\r\n//     .catch(({ data }) => dispatch(\r\n//       {\r\n//         type: DEL_FRIEND_FAILURE,\r\n//         payload: data\r\n//       }\r\n//     ))\r\n// }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport thunk from 'redux-thunk'\r\nimport  reducer  from './components/reducers'\r\nimport logger from 'redux-logger'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\n// const logger = (store) => (next) => (action) =>{\r\n//     next(action)\r\n// }\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(thunk, logger),\r\n)\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n</Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}